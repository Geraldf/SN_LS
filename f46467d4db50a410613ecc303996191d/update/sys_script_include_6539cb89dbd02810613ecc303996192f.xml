<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_38710_lansweeper.LansweeperIntegrationAjax</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description>CI Synchonizer - Lansweeper Integration Ajax</description>
        <name>LansweeperIntegrationAjax</name>
        <script><![CDATA[var LansweeperIntegrationAjax = Class.create();

LansweeperIntegrationAjax.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {

	runNow: function() {
		var lsUtils = new LansweeperIntegrationUtils();
		return lsUtils.runNow();
	},
	
	updateSettings: function() {
		var obj = this.getParameter('sysparm_obj');
		var lsUtils = new LansweeperIntegrationUtils();
		return lsUtils.updateSettings(obj);
	},
	
	updateSupportedClasses: function() {
		var obj = this.getParameter('sysparm_obj');
		var lsUtils = new LansweeperIntegrationUtils();
		return lsUtils.updateSupportedClasses(obj);
	},
	
	getIntegrationDetails: function(){
		var fields = ['class_name','last_run_start','last_run_processed','last_run_inserts','last_run_ignored', 'last_run_errors', 'last_run_updated'];
        var record = {};
		var list = [];
		
		var gr = new GlideRecord("x_38710_lansweeper_supported_classes");
		gr.addEncodedQuery("sys_class_name=x_38710_lansweeper_supported_classes");
		gr.orderBy('class_name');
		gr.query();		
		
		while (gr.next()) {
			fields.forEach(function(field){
				if(field == 'class_name'){
					record['CI Class'] = gr.getDisplayValue(field);					
				}
				if(field == 'last_run_start'){
					record['Last Run'] = gr.getDisplayValue(field);					
				}				
				if(field == 'last_run_processed'){
					record['Processed'] = gr.getDisplayValue(field);					
				}				
				if(field == 'last_run_inserts'){
					record['Inserted'] = gr.getDisplayValue(field);					
				}	
				if(field == 'last_run_ignored'){
					record['Ignored'] = gr.getDisplayValue(field);					
				}	
				if(field == 'last_run_errors'){
					record['Errors'] = gr.getDisplayValue(field);					
				}				
				if(field == 'last_run_updated'){
					record['Updated'] = gr.getDisplayValue(field);					
				}												
			});
			list.push(record);
			record = {};			
		}
		//gs.info(JSON.stringify([list]));
		return JSON.stringify([list]);

	},
	
	getIntegrationRefreshProperty: function(){	
		return gs.getProperty('x_38710_lansweeper.integration.dasboard.refresh.rate');		
	},	
	
	getIntegrationAppInfo: function() {
		var lsUtilsAppInfo = new LansweeperIntegrationUtils();
		var ob = lsUtilsAppInfo.appInfo();
		return JSON.stringify(ob);
	},

    type: 'LansweeperIntegrationAjax'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>luis.cyrillo</sys_created_by>
        <sys_created_on>2020-11-04 06:51:11</sys_created_on>
        <sys_id>6539cb89dbd02810613ecc303996192f</sys_id>
        <sys_mod_count>38</sys_mod_count>
        <sys_name>LansweeperIntegrationAjax</sys_name>
        <sys_package display_value="CI Synchronizer (Lansweeper On-Prem Edition)" source="x_38710_lansweeper">f46467d4db50a410613ecc303996191d</sys_package>
        <sys_policy/>
        <sys_scope display_value="CI Synchronizer (Lansweeper On-Prem Edition)">f46467d4db50a410613ecc303996191d</sys_scope>
        <sys_update_name>sys_script_include_6539cb89dbd02810613ecc303996192f</sys_update_name>
        <sys_updated_by>luis.cyrillo</sys_updated_by>
        <sys_updated_on>2020-12-11 02:55:58</sys_updated_on>
    </sys_script_include>
</record_update>
